#!/usr/bin/env ruby
require 'shell_explain'
require 'ansi/core'
require 'ansi/progressbar'

# example:
# $ explain "cut -d ' ' -f 1 /var/log/apache2/access_logs | uniq -c | sort -n"

# get cmd
@cmd = ARGV[0]
@explain_color = ARGV[1].nil? ? :yellow : ARGV[1]

#progress bar
pbar = ANSI::Progressbar.new("Test Bar", 100)

def run(pbar)
  puts "get explain data".ansi(:green)
  pbar.inc
  doc = ShellExplain::Site.get_data(@cmd)
  #commands format: {command: help-num}
  @commands = ShellExplain::Site.get_command(doc)
  @explains = ShellExplain::Site.get_explain(doc)

  combination = @commands.values.zip(@explains)

  @results = combination.inject({}) do|h, node|
    h[node[0]] = node[1] unless h.has_key?(node[0])
    h
  end

  pbar.finish
end

pbar.transfer_mode
run(pbar)
puts ("+"*20)+"Explain Shell"+("+"*20)

# input results
# puts "--results: #{@results.inspect}"

puts "invalid command".ansi(:red) if @results.empty?
@results.each do |re|
  cmd_name = @commands.each_pair do|pair|
    puts pair[0].ansi(:red) if pair.include?(re[0])
  end

  puts re[1].ansi(@explain_color.to_sym)
  puts ("+"*50).ansi(:green)
end


